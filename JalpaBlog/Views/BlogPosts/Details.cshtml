@model JalpaBlog.Models.BlogPost

@{
    ViewBag.Title = "Details";
}
<!--Page Header-->


<section class="site-section py-lg">
    <div class="container">
        <div class="row blog-entries element-animate">

            <div class="col-md-12 col-lg-8 main-content">
                <h1 class="Model-Title">@Model.Title</h1>
                @{ if (Model.MediaUrl != null)
                    {
                        <img class="img-responsive" src="@Model.MediaUrl" alt="" />
                    }
                }
                <div class="post-meta">
                    <h5> by Jalpa Patel</h5>
                    <span class="mr-2">@Model.Created.ToString("MMMM d, yyyy")</span> &bullet;
                </div>
            </div>
        </div>

        <!--Abstract-->
        <h4 class="Model-Abstract">@Model.Abstract</h4>

          @Html.Raw(Model.Body)


    </div>

</section>

<!-- Begin comment-list -->
@*Conditoinally render the "Add Comment"form*@
@*Create a form to collect the comment from the logged in user*@

@*<h4 style="text-align:center;"> Please Leave a comment</h4>*@
<h4 style="text-align:center;"> (Please Login first to leave a comment)</h4>

@if (User.Identity.IsAuthenticated)
{

    using (Html.BeginForm("Create", "Comments", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Slug)
        @Html.Hidden("BlogPostId", Model.Id)

        <div class="col-md-12 text-center h3">
            <textarea name="commentBody" rows="5" cols="100"></textarea>
        </div>
        <div class="col-md-12 text-center h3">
            <button class=" btn btn-primary" type="Submit" value="Post">Add Comment</button>
        </div>
        <br />
    }

    <hr />
    @*Dispaying the comments associated with this BlogPost*@
    <div class="row">
        <div class="col-md-12 text-center h3">
            Comment
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12 text-center h3">
            @{
                var count = Model.Comments.Count();
                var word = count == 1 ? "comment" : "comments";
            }
            (@count@word)
        </div>
    </div>
}
@foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
{
    <hr />
    <div class="row">
        <div class="col-md-12 text-center">
            Written by @comment.Author.Email on @comment.Created.ToString("MMMM d,yyyy")
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-center">
            @comment.Body
        </div>
    </div>

    <div>

        @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
        {
            <br />
            <a href='@Url.Action("Edit","Comments", new { id = comment.Id })'>Edit</a> <span>&nbsp;</span>
            <a href='@Url.Action("Delete","Comments", new { id = comment.Id })'>Delete</a>
        }

    </div>
}

