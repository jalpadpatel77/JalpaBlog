@model JalpaBlog.Models.BlogPost

@{
    ViewBag.Title = "Details";
}
<!--PAge Header-->


<section class="site-section py-lg">
    <div class="container">
        <div class="row blog-entries element-animate">

            <div class="col-md-12 col-lg-8 main-content">
                <h1 class="Model-Title">@Model.Title</h1>
                @{ if (Model.MediaUrl != null)
                    {
                        <img class="img-responsive" src="@Model.MediaUrl" alt="" />
                    }
                }
                <div class="post-meta">
                    <h5> by Jalpa Patel</h5>
                    <span class="mr-2">@Model.Created.ToString("MMMM d, yyyy")</span> &bullet;
                </div>
            </div>
        </div>

        <!--Abstract-->
        <h4 class="Model-Abstract">@Model.Abstract</h4>

        @Html.Raw(Model.Body)
        <!-- END comment-list -->
        @* <div class="comment-form-wrap pt-5">

                <form action="#" class="p-5 bg-light">
                    <h4 class="mb-5">Leave a comment</h4>
                    <div class="form-group">
                        <label for="message">Message</label>
                        <textarea name="" id="message" cols="30" rows="10" class="form-control"></textarea>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Post Comment" class="btn btn-primary">
                    </div>

                </form>
            </div>*@
    </div>

</section>
@*Conditoinally render the "Add Comment"form*@
@*Create a form to collect the comment from the logged in user*@

@if (User.Identity.IsAuthenticated)
{

    using (Html.BeginForm("Create", "Comments", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Slug)
        @Html.Hidden("BlogPostId", Model.Id)


        <h4> Leave a comment</h4>
       
            <textarea name="commentBody" rows="5" cols="100"></textarea>
       
            <button class=" btn btn-primary" type="Submit" value="Post">Post Comment</button>
        
        <br />
     }
           

            <hr />
            @*Dispaying the comments associated with this BlogPost*@
            <div class="row">
                <div class="col-md-12 text-center h3">
                    Comment
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12 text-center h3">
                    @{
                        var count = Model.Comments.Count();
                        var word = count == 1 ? "comment" : "comments";
                    }
                    (@count@word)
                </div>
            </div>
    }
            @foreach (var comment in Model.Comments.OrderByDescending(c => c.Created))
            {
                <hr />
                <div class="row">
                    <div class="col-md-12 text-center">
                        Written by @comment.Author.Email on @comment.Created.ToString("MMMM d,yyyy")
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-center">
                        @comment.Body
                    </div>
                </div>

            }

